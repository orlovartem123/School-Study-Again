@using SchoolBusinessLogic.ViewModels.StudentModels

@model SchoolBusinessLogic.ViewModels.TeacherModels.MaterialViewModel

@{
    ViewData["Title"] = "UpdateMaterial";
}

@{ int count = 0;}

<div class="text-center">
    <h2 class="display-4">Update material</h2>
</div>

﻿<form class="container-fluid" name="UpdateMaterialForm" onsubmit="updateMaterial()" style="max-width: 800px;">
    <div class="text-danger"></div>
    <div class="form-group">
        <div class="row justify-content-between">
            <label class="col-lg-3">
                Material name
            </label>
            <div class="col-lg-9">
                <input type="text" name="name" value="@(Model.Name)" required class="form-control" />
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="row">
            <label class="col-lg-3 justify-content-between">
                Material price
            </label>
            <div class="col-lg-9">
                <input type="number" name="price" required min="0.01" step="0.5" value="@(Model.Price.ToString().Replace(',','.'))" class="form-control" />
            </div>
        </div>
    </div>

    <div class="form-group" id="electivesToMaterialsParent">
        @{
            if (Model.MaterialElectives != null)
            {
                foreach (var record in Model.MaterialElectives)
                {
                    <div class="row" id="updateMaterialElective@(count)" style="margin-top: 6px;">
                        <label class="col-lg-3">
                            @if (count == 0)
                            {<span>Electives</span>}
                        </label>
                        <div class="col-lg-9" style="display: flex; justify-content:space-between;">
                            <select name="ElectiveId" onchange="checkIsElectives(this.value);" class="form-control" asp-items="@(new SelectList(@ViewBag.Electives, "Id", "Name", record.Key))">
                                <option selected value="-1">Not chosen</option>
                            </select>
                            <input name="count" required type="number" min="1" value="@(record.Value.Item2)" class="form-control" style="width: 80px; margin-left: 6px;" />
                            @if (count == 0)
                            {
                                <input type="button" value="+" onclick="addElective();" style="width: 50px; margin-left: 6px;" class="btn btn-sm btn-light" />
                            }
                            else
                            {
                                <input type="button" value="-" onclick="deleteElective(@(count));" style="width: 50px; margin-left: 6px;" class="btn btn-sm btn-light" />
                            }
                        </div>
                    </div>
                    count++;
                }
            }
            else
            {
                <div class="row" style="margin-top: 6px;">
                    <label class="col-lg-3">
                        Electives
                    </label>
                    <div class="col-lg-9" style="display: flex; justify-content:space-between;">
                        <select onchange="checkIsElectives(this.value);" name="ElectiveId" class="form-control" asp-items="@(new SelectList(@ViewBag.Electives, "Id", "Name"))">
                            <option selected value="-1">Not chosen</option>
                        </select>
                        <input name="count" required type="number" min="1" value="1" class="form-control" style="width: 80px; margin-left: 6px;" />
                        <input type="button" value="+" onclick="addElective();" style="width: 50px; margin-left: 6px;" class="btn btn-sm btn-light" />
                    </div>
                </div>
            }
        }
    </div>

    <div class="form-group">
        <div class="row justify-content-between">
            <label class="col-lg-3">
                Interests
            </label>
            <div class="col-lg-9">
                @{
                    if (Model.Interests != null)
                    {
                        <select multiple name="InterestIds" class="form-control">
                            <option value="-1">Not chosen</option>
                            @{
                                var list = (List<InterestViewModel>)ViewBag.Interests;
                                foreach (var record in list)
                                {
                                    if (Model.Interests.Contains((record.Id, record.Name)))
                                    {
                                        <option selected value="@(record.Id)">@(record.Name)</option>
                                    }
                                    else
                                    {
                                        <option value="@(record.Id)">@(record.Name)</option>
                                    }
                                }
                            }
                        </select>
                    }
                    else
                    {
                        <select name="InterestIds" multiple class="form-control" asp-items="@(new SelectList(@ViewBag.Interests, "Id", "Name"))">
                            <option selected value="-1">Not chosen</option>
                        </select>
                    }
                }
            </div>
        </div>
    </div>

    <div class="form-group row">
        <div class="col-lg-12">
            <button type="submit" style="min-width: 100px" class="btn btn-sm btn-light">
                Update
            </button>
        </div>
    </div>
</form>
<script src="~/js/Materials/update-create.js"></script>
<script>
    const childIdPref = 'updateMaterialElective';

    let isElectives = @((Model.MaterialElectives!=null).ToString().ToLower());

    let numForChild = @(count);

    function updateMaterial() {
        let form = document.UpdateMaterialForm;
        let objToSave = {
            name: form.name.value,
            price: form.price.value.replace('.', ','),
            electivematerials: getElectivesToSave(),
            interestids: getSelectValues(form.InterestIds)
        };
        $.ajax({
            method: "POST",
            url: "/Material/Update",
            data: objToSave,
            success: function (response) {
                if (response.result === 'Redirect') {
                    window.location = response.url;
                }
            }
        });
    }
</script>